*This is a Stata do file
*Regressions
*//Simple Regression
	*Simple Regression
	*Log Simple Regression
*//Panel Regression
*//Fixed Effects
	*time fixed effects
	*industry fixed effects
	*state fixed effects
*//Industries
*//IV

*//Simple Regression
***Mi Yun-Kuo Spophie Friebe 
**Research Moduel finance 2020/2021
***Impacts of Covid 19 
***Regression part 

**data already merged 
clear all 
**import data
use "US_Covid_Compstat_Stock_weekly_1_final.dta"

duplicates tag gvkey state week year, generate (duplicates)
**Check  for duplicates

duplicates drop gvkey week fyearq, force 

drop count_gvkey
egen count_gvkey=count(gvkey), by (gvkey)
tab count_gvkey
drop if count_gvkey==0
**some comapanies have gaps in observation data 
**drop them if there is data for less than 70 weeks 
drop if count_gvkey<=70


replace weekly_death=0 if fyearq==2019
destring gvkey, generate (gvkeyid)
**check how many companies are left
unique gvkeyid, generate(sum_companies)

**generate the panel variable for weeks!
gen time_variable=0
replace time_variable=week if fyearq==2019
replace time_variable=week+52 if fyearq==2020
**check for duplicates as xtset not working with duplicates 
duplicates drop gvkeyid time_variable, force  
**check for duplicates as xtset not working with duplicates 

**due to the original covid data there are 59 negative observations 
**since mistake in original data drop them  
drop if weekly_death<0 
**drop the canada values!!
**british Columbia
drop if state=="BC" 
**Ontario
drop if state=="ON" 
*Alberta
drop if state=="AB"
**Quebec
drop if state=="QC"
**Puerto rico
drop if state=="PR"
**Saskatchewan Canada
drop if state=="SK"

**drop Hawai since no Covid data available
drop if state=="HI" 
**drop Virgin Island 
drop if state=="VI"
drop if state=="US"

** compensate for missing values (no death) in week 1-5 of 2020
replace weekly_death=0 if week<=5  

**drop values from dataset that are not used for Covid 
drop new_death tot_death new_cases tot_cases_1 key US_every_7 tot_cases US_new_cases US_new_death US_weekly_death US_tot_cases_1

encode state, generate(state_number)
rename _merge _merge_old
**add the total population of a state
merge m:1 state using "Inhabitants_final_final.dta", force
**death per population, later used as robustness check 
gen death_fraction=(weekly_death/popu)*100

rename _merge _merge2
**Add Covid US Data
merge m:1 week using "Covid_US_final_final.dta", force
rename _merge _merge_US_final
**account for week 1-5 that have zero cases
replace US_weekly_death=0 if week<=5

**Add the weekly case data
merge m:1 state week using "Weekly_Cases_summed.dta", force
destring weekly_cases, generate(weekly_cases_long)
drop weekly_cases 
rename weekly_cases_long weekly_cases
replace weekly_cases=0 if week<=4
replace weekly_cases=0 if fyearq==2019

**generate variable for leverage-used later 
gen debt_to_assets=dlttq/atq

**generate industry dummy after Standard Industry Classification main groups (SIC)- later used
gen sic_dummy=0
destring sic, replace 
replace sic_dummy=1 if sic>=1000 & sic<=1499
**mining
replace sic_dummy=2 if sic>=1500 & sic<=1799
**construction
replace sic_dummy=3 if sic>=2000 & sic<=3999
**manufacturing
replace sic_dummy=4 if sic>=4000 & sic<=4999
**Trasport, Communication, Electric
replace sic_dummy=5 if sic>=5000 & sic<=5199
**Wholesale Trade
replace sic_dummy=6 if sic>=5200 & sic<=5999
**Retail Trade
replace sic_dummy=7 if sic>=6000 & sic<=6799
**finance, Insurance and real estate
replace sic_dummy=8 if sic>=7000 & sic<=8999
**services
replace sic_dummy=9 if sic>=9100 &sic<=9729
**Public Administration- no observation
replace sic_dummy=10 if sic_dummy==0
**Agriculture, Foresty, Fishing
replace sic_dummy=0 if sic_dummy==.

**add the data on share of population over 65- later used
generate age=0
replace age=20.5 if state=="FL"
replace age=20.6 if state=="ME"
replace age=19.9 if state=="WV"
replace age=19.4 if state=="VT"
replace age=18.7 if state=="DE"
replace age=18.7 if state=="MT"
replace age=18.2 if state=="PA"
replace age=18.1 if state=="NH"
replace age=17.7 if state=="SC" 
replace age=17.6 if state=="OR"
replace age=17.5 if state=="AZ" 
replace age=17.5 if state=="NM"
replace age=17.2 if state=="CT" | state=="MI" | state=="RI" 
replace age=17.1 if state=="IA" | state=="OH"
replace age=17 if state=="AR" | state=="WI"
replace age=16.9 if state=="AL" | state=="MO"
replace age=16.6 if state=="SD"
replace age=16.5 if state=="MA" |state=="WY"
replace age=16.4 if state=="KY" |state=="NY" |state=="TN"
replace age=16.3 if state=="NC" 
replace age=16.1 if state=="NJ"
replace age=15.9 if state=="ID" | state=="KS" | state=="MN" | state=="MS"
replace age=15.8 if state=="IN"
replace age=15.7 if state=="NE" | state=="NV" | state=="OK"
replace age=15.6 if state=="IL"
replace age=15.4 if state=="LA" | state=="MD"| state=="VA" | state=="WA"
replace age=15.3 if state=="ND"
replace age=14.3 if state=="CA" 
replace age=14.2 if state=="CO"
replace age=13.9 if state=="GA" 
replace age=12.6 if state=="TX" 
replace age=11.8 if state=="AK"
replace age=11.1 if state=="UT"

**replace 2019 values for stay home order with zero, since no stay home order was in place 
gen dummy_stay_home=0
replace dummy_stay_home=1 if state=="FL" |state=="CA" |state=="NY" |state=="IL" | state=="TX" |state=="NJ" |state=="MA" |state=="PA" |state=="CO" 
gen dummy_stay_home1=0
replace dummy_stay_home1=1 if dummy_stay_home==1 & fyearq==2019
replace stay_home_order=0 if dummy_stay_home1==1


**update stay home order collected with new values till week 50 (so far till week 44)
replace stay_home_order=1 if state=="CA" | state=="TX" | state=="IL" | state=="CO" | state=="NY" & week>44 
replace stay_home_order=2 if state=="CA" & week>=47 & week<=50
replace stay_home_order=2 if state=="NY" & week>=47 & week<=50
replace stay_home_order=2 if state=="CO" & week>=37 & week<=50
replace stay_home_order=2 if state=="IL" & week>=48 & week<=50
replace stay_home_order=2 if state=="TX" & week>=46 & week<=50

**generate the polit variables, that is the state representation in the Senate in the 117 US Congress
**0 is Democratic 
**1 is Republican 
**2 is one Rebublican and one Democratic Senator 

gen polit=0 
replace polit=1 if state=="TX" 
replace polit=1 if state=="FL"

replace polit=1 if state=="OK" 
replace polit=1 if state=="KS"

replace polit=1 if state=="NE" 
replace polit=1 if state=="ID"

replace polit=1 if state=="UT" 
replace polit=1 if state=="IA"

replace polit=1 if state=="LA" 
replace polit=1 if state=="MO"

replace polit=1 if state=="AR" 
replace polit=1 if state=="MS"

replace polit=1 if state=="TN" 
replace polit=1 if state=="KY"

replace polit=1 if state=="IN" 
replace polit=1 if state=="AK"

replace polit=1 if state=="GA" 
replace polit=1 if state=="SC"

replace polit=1 if state=="NC" 


replace polit=2 if state=="MT"
replace polit=2 if state=="CO"


replace polit=2 if state=="WI"
replace polit=2 if state=="AL"


replace polit=2 if state=="OH"
replace polit=2 if state=="WV"


replace polit=2 if state=="PA"

**Also take 2 when one of the senators is independet (Maine Independent and Republican Vermont Independet and Democratic)
replace polit=2 if state=="ME"
replace polit=2 if state=="VT"


**generate polit variable with last election this november for the new senate representation starting in January 2021
gen polit_last=0 
**O for Democratic 
**1 Republican 
replace polit_last=1 if state=="TX" | state=="ID" |state=="WY" | state=="MT" | state=="SD" |state=="NE" | state=="KS" | state=="OK" | state=="IA"  | state=="LA" | state=="AR"
replace polit_last=1 if state=="MS" | state=="TN" | state=="AL" | state=="KY" | state=="ME" | state=="WV" | state=="NC" | state=="SC" 
replace polit_last=1 if state=="AK"
**for thoose who were no senate election this year take presidential election result of November 2020
replace polit_last=1 if state=="UT" | state=="ND" | state=="MO"  | state=="FL" | state=="IN" | state=="OH" 

**Polit variable only Republican or Democratic but not the states with mixed representation  
gen polit_check=0 if polit==0
replace polit_check=1 if polit==1

**generate the log values 
gen prcodavg_log=log(prcodavg) 
gen weekly_death_log=log(weekly_death) 
gen weekly_cases_log=log(weekly_cases)
gen US_weekly_death_log=log(US_weekly_death)
gen cash_log=log(chq)
gen revenue_log=log(revtq)
gen debt_to_assets_log=log(debt_to_assets)
gen assets_log=log(atq)
gen sales_log=log(saleq)

**declare data to be panel data 
**bit unbalanced because of some little gaps in available company data 
xtset gvkeyid time_variable


ssc install estout 
**start with basic regressions 
**Covid on stock prices with index and logs 
reg prcodavg weekly_death, robust  
eststo simple_regression 
reg prcodavg_log weekly_death_log, robust
eststo simple_regression_log_log   
reg prcodavg_log weekly_death, robust 
eststo simple_regression_log_index
reg prcodavg weekly_death_log, robust 
eststo simple_regression_index_log
esttab 
esttab using simple_regression.tex, replace star(+ 0.10 * 0.05 ** 0.01 *** 0.001)
est clear 

**consider death of the whole United States
reg prcodavg US_weekly_death, robust 
eststo simple_regression_US
reg prcodavg_log US_weekly_death_log, robust
eststo simple_regression_US_log
esttab 
esttab using simple_regression_US.tex, replace star(+ 0.10 * 0.05 ** 0.01 *** 0.001)
est clear 

**check the effect of cases not deaths!
reg prcodavg weekly_cases, robust 
eststo regression_stock_cases
reg prcodavg_log weekly_cases_log, robust
eststo regression_both_log
reg prcodavg_log weekly_cases, robust
eststo regression_stock_log_cases
reg prcodavg weekly_cases_log, robust 
eststo regression_stock_cases_log 
esttab 
esttab using Regression_with_cases.tex, replace star(+ 0.10 * 0.05 ** 0.01 *** 0.001)
est clear 


**compare the first and the second wave!
**first wave till the end of june 
**second wave starting from mid October
plot US_weekly_death week if fyearq==2020
generate time_check=0 if fyearq==2020
replace time_check=1 if fyearq==2020 & week<=27 
replace time_check=2 if fyearq==2020 & week>=42

**Interaction terms to compare the results, 0 is weeks between
reg prcodavg c.weekly_death#i.time_check, robust
eststo compare_weeks 
esttab 
esttab using compare_two_waves.tex, replace star(+ 0.10 * 0.05 ** 0.01 *** 0.001)
est clear 

**impact of Covid-19 on stock prices clustered by state
bysort week: reg prcodavg weekly_cases, robust 

**impacts on industries using sic dummy created above 
**Interaction term displays the sensitivity of rising deaths in the respective industry
reg prcodavg c.weekly_death##1.sic_dummy, robust
eststo Mining
reg prcodavg c.weekly_death##2.sic_dummy, robust
eststo Construction
reg prcodavg c.weekly_death##3.sic_dummy, robust
eststo Manufacturing
reg prcodavg c.weekly_death##4.sic_dummy, robust
eststo Transport_Communication
reg prcodavg c.weekly_death##5.sic_dummy, robust
eststo Wholesale_trade
reg prcodavg c.weekly_death##6.sic_dummy, robust
eststo Retail
reg prcodavg c.weekly_death##7.sic_dummy, robust
eststo Finance_Insurance
reg prcodavg c.weekly_death##8.sic_dummy, robust
eststo Service
reg prcodavg c.weekly_death##10.sic_dummy, robust
eststo Agriculture_Fishing_Foresty
esttab,mtitles label title(impact on stock prices in different industries)
esttab using regression_industry_final.tex, label title(Impact on stock prices in different industries) mtitle replace star(+ 0.10 * 0.05 ** 0.01 *** 0.001)
est clear

**further clustering of Retail in order to explain the surprising result 
**compare to the aggregate of all other firms not just within retail 
gen retail_dummy=0 
replace retail_dummy=1 if sic==5400 | sic==5411
**grocery and Food
replace retail_dummy=2 if sic==5621 |sic==5600 |sic==5661 |sic==5651 
**Clothing 
replace retail_dummy=3 if sic==5810 |sic==5812
**Eating and drinking places
replace retail_dummy=4 if sic==5500 |sic==5531
**Auto supply 
reg prcodavg c.weekly_death##i.retail_dummy, robust
eststo regression_retail 
esttab, label
esttab using regression_retail_industry.tex, label replace star(+ 0.10 * 0.05 ** 0.01 *** 0.001)
est clear

**state analysis
bysort state:reg prcodavg weekly_death, robust 

**14 states with more than 3000 observations
reg prcodavg weekly_death if state=="CA", robust
eststo  california
reg prcodavg weekly_death if state=="CO", robust 
eststo colorado
reg prcodavg weekly_death if state=="TX", robust 
eststo texas
reg prcodavg weekly_death if state=="FL", robust 
eststo florida
reg prcodavg weekly_death if state=="PA", robust 
eststo pennsylvania
reg prcodavg weekly_death if state=="GA", robust 
eststo georgia
reg prcodavg weekly_death if state=="IL", robust 
eststo illinois
esttab, mtitle
esttab using regression_state_1.tex, mtitle replace star(+ 0.10 * 0.05 ** 0.01 *** 0.001)
est clear 

reg prcodavg weekly_death if state=="NY", robust 
eststo new_york
reg prcodavg weekly_death if state=="CT", robust 
eststo connecticut
reg prcodavg weekly_death if state=="MA", robust 
eststo massachusetts
reg prcodavg weekly_death if state=="NC", robust 
eststo north_carolina
reg prcodavg weekly_death if state=="NJ", robust 
eststo new_jersey
reg prcodavg weekly_death if state=="OH", robust 
eststo ohio
reg prcodavg weekly_death if state=="VA", robust 
eststo virginia
esttab, mtitle
esttab using regression_state_2.tex, mtitle replace star(+ 0.10 * 0.05 ** 0.01 *** 0.001)
est clear 

**create indicator fot only the first wave
gen time_state=0 
replace time_state=1 if fyearq==2020 & week<=27
**to analysize: are the inisgnificant states at least significant for first wave?
**check thoose states that are inisgnificant for the first wave 
reg prcodavg c.weekly_death##i.time_state if state=="FL", robust 
eststo florida
reg prcodavg c.weekly_death##i.time_state if state=="PA", robust 
eststo pennsylvania
reg prcodavg c.weekly_death##i.time_state if state=="GA", robust 
eststo georgia
reg prcodavg c.weekly_death##i.time_state if state=="NY", robust 
eststo new_york
esttab, mtitle
esttab using regression_state_time_1.tex, mtitle replace star(+ 0.10 * 0.05 ** 0.01 *** 0.001)
est clear 

reg prcodavg c.weekly_death##i.time_state if state=="CT", robust 
eststo connecticut
reg prcodavg c.weekly_death##i.time_state if state=="MA", robust 
eststo massachusetts
reg prcodavg c.weekly_death##i.time_state if state=="NC", robust 
eststo north_carolina
reg prcodavg c.weekly_death##i.time_state if state=="OH", robust 
eststo ohio
esttab, mtitle
esttab using regression_state_time_2.tex, mtitle replace star(+ 0.10 * 0.05 ** 0.01 *** 0.001)
est clear 


**check polit impact to the weekly cases
reg weekly_death polit, robust 
eststo basic
reg weekly_death polit_check, robust 
eststo only_total_representation
reg weekly_death i.polit_check, robust 
eststo only_total__i
reg weekly_death_log i.polit_check, robust 
eststo only_total_log_i
reg weekly_death i.polit, robust 
eststo basic_i
reg weekly_death_log i.polit, robust 
eststo basic_log_i
esttab
esttab using weekly_death_polit.tex, replace star(+ 0.10 * 0.05 ** 0.01 *** 0.001)
est clear 

**add indendent variables
corr prcodavg weekly_death mkvaltq saleq sic_dummy chq atq  revtq

**start with basic case
reg prcodavg weekly_death, robust
eststo basic
**add industry 
reg prcodavg weekly_death sic, robust
eststo basic_2
**add sales
reg prcodavg weekly_death sic saleq, robust
eststo basic_3
**test whether it makes sense to take log values 
reg prcodavg weekly_death sic saleq, robust 
predict resid, resid
hist resid, percent
tabstat resid, stats(median mean)
**median is less than the mean, hence the residual is skewed to the right 
**this speakes in favor of using log values- which is done in the latter part 
**first add companie size expressed as total assets 
reg prcodavg weekly_death sic saleq atq, robust 
eststo basic_4
**add cash
reg prcodavg weekly_death sic saleq atq chq, robust
eststo basic_5 
**add leverage
reg prcodavg weekly_death sic saleq atq chq debt_to_assets, robust 
eststo basic_6 
estat vif
esttab 
esttab using further_regression_basic.tex, replace star(+ 0.10 * 0.05 ** 0.01 *** 0.001)
est clear 
 
**now with log values- but weekly death not as log 
**put without penny stocks, as thoose have negative logs 
**create dummy to identify penny stocks 
gen log_dummy=0
replace log_dummy=1 if prcodavg<=1

gen sales_dummy=0
replace sales_dummy=1 if saleq<1

gen assets_dummy=0
replace assets_dummy=1 if atq<1
 
 **same as before add variables
reg prcodavg_log weekly_death if log_dummy==0, robust 
eststo basic_log
reg prcodavg_log weekly_death sic if log_dummy==0, robust
eststo basic_log_2
reg prcodavg_log weekly_death sic sales_log  if log_dummy==0 & sales_dummy==0, robust 
eststo basic_log_3
reg prcodavg_log weekly_death sic sales_log assets_log if log_dummy==0 & sales_dummy==0 & assets_dummy==0, robust
eststo basic_log_4
**add cash 
reg prcodavg_log weekly_death sic sales_log assets_log  cash_log if log_dummy==0 & sales_dummy==0 &assets_dummy==0, robust
eststo basic_log_5
**add leverage!
reg prcodavg_log weekly_death sic sales_log assets_log cash_log debt_to_assets if log_dummy==0 & sales_dummy==0 &assets_dummy==0, robust
eststo basic_log_6
estat vif
**Vif high for assets hence drop assets for further analysis 
**without assets
reg prcodavg_log weekly_death sic sales_log cash_log debt_to_assets if log_dummy==0 & sales_dummy==0, robust
eststo basic_log_7
estat vif
esttab
esttab using further_regression_basic_log.tex, replace star(+ 0.10 * 0.05 ** 0.01 *** 0.001)
est clear 

**include company fixed effects to the last setup
xtreg prcodavg_log weekly_death sic sales_log cash_log debt_to_assets if log_dummy==0 & sales_dummy==0, fe vce(robust)
eststo company_fixed_effect 
**time fixed effects(with weeks)
reghdfe prcodavg_log weekly_death sales_log cash_log debt_to_assets if log_dummy==0 & sales_dummy==0, absorb(time_variable) vce(robust)
eststo time_fixed_effects
**check time fixed effects year 
reghdfe prcodavg_log weekly_death sales_log cash_log debt_to_assets if log_dummy==0 & sales_dummy==0, absorb(fyearq) vce(robust)
eststo time_fixed_year
**use both company and time (week) fixed effects 
reghdfe prcodavg_log weekly_death sales_log cash_log debt_to_assets if log_dummy==0 & sales_dummy==0, absorb(time_variable gvkeyid) vce(robust)
eststo both_fixed_effects
esttab 
esttab using fixed_effects.tex,replace star(+ 0.10 * 0.05 ** 0.01 *** 0.001)
est clear  

**following part evaluates the identification channel 
**so far baseline regression 
reg prcodavg_log weekly_death sales_log sic cash_log debt_to_assets if log_dummy==0 & sales_dummy==0, robust
eststo base
**regression with potential instrumenmts 
reg prcodavg_log weekly_death sales_log sic cash_log debt_to_assets age popu polit weekly_cases if log_dummy==0 & sales_dummy==0, robust
eststo base_with_all_instruments
estat 
estat start_IV.tex, replace star(+ 0.10 * 0.05 ** 0.01 *** 0.001)
est clear

**what is impacting the weekly death?
**hypothesis is popu, age, polit_check and weekly_cases
reg weekly_death age popu polit_check weekly_cases if log_dummy==0 & sales_dummy==0, robust
eststo IV_covid_test
predict resid_death_final, resid
estat vif
reg prcodavg_log weekly_death sales_log sic cash_log debt_to_assets resid_death_final if log_dummy==0 & sales_dummy==0, robust 
test resid_death_final
**Durbin-Wu Husman test speaks in favor ofg not suited as an instrument 
**how the IV would look 
ivregress 2sls prcodavg_log sales_log sic cash_log debt_to_assets (weekly_death=weekly_cases age popu polit_check) if log_dummy==0 & sales_dummy==0, vce(robust) 

**test IV without weekly_cases
**test only politics and age and popu
reg weekly_death age polit_check popu if log_dummy==0 & sales_dummy==0, robust 
eststo IV_covid_test_2
predict resid_test_2, resid
reg prcodavg_log weekly_death sales_log sic cash_log debt_to_assets resid_test_2 if log_dummy==0 & sales_dummy==0, robust 
test resid_test_2
**test speaks in favor of using it as an instrument 
esttab 
esttab IV_covid.tex, replace star(+ 0.10 * 0.05 ** 0.01 *** 0.001)
est clear

**IV regression 
**first install packages
ssc install ivreg2
ssc install ranktest
**for comparison 
reg prcodavg_log weekly_death sales_log sic cash_log debt_to_assets if log_dummy==0 & sales_dummy==0, robust
eststo IV_weekly_second
ivreg2 prcodavg_log sales_log sic cash_log debt_to_assets (weekly_death= popu age polit_check) if log_dummy==0 & sales_dummy==0, robust ffirst
eststo IV_weekly_second_2
**the test look fine
esttab
esttab IV_weekly_second.tex, replace star(+ 0.10 * 0.05 ** 0.01 *** 0.001)
est clear 


**test the stay_home_channel
reg prcodavg stay_home_order, robust 
eststo IV_stay_home
reg prcodavg_log stay_home_order, robust 
eststo IV_stay_home_2

**Durbin-Wu Hausman test 
reg stay_home_order weekly_cases polit_check if log_dummy==0 & sales_dummy==0, robust
**influence 
predict resid_test_stay_home, resid 
reg prcodavg_log stay_home_order sales_log cash_log sic debt_to_assets resid_test_stay_home if log_dummy==0 & sales_dummy==0, robust
eststo IV_stay_home_3
**significant!!
test resid_test_stay_home

**used as IV
**for comparison 
reg prcodavg_log stay_home_order sales_log cash_log sic debt_to_assets if log_dummy==0 & sales_dummy==0, robust 
eststo IV_stay_home_4
ivreg2 prcodavg_log sales_log cash_log sic debt_to_assets (stay_home_order= polit_check weekly_cases) if log_dummy==0 & sales_dummy==0, robust 
eststo IV_stay_home_5

**case with age 
reg stay_home_order age weekly_cases polit_check if log_dummy==0 & sales_dummy==0, robust
predict resid_test_stay_home_2, resid

reg prcodavg_log stay_home_order sales_log cash_log sic debt_to_assets resid_test_stay_home_2 if log_dummy==0 & sales_dummy==0, robust 
eststo IV_stay_home_6
**not significant; not suited as IV
test resid_test_stay_home 
**try IV!
**comparison 
reg prcodavg_log stay_home_order sales_before_log cash_log sic debt_to_assets if log_dummy==0 & sales_dummy==0, robust 
ivreg2 prcodavg_log sales_before_log cash_log sic debt_to_assets (stay_home_order= polit_check weekly_cases age) if log_dummy==0 & sales_dummy==0, robust 
eststo IV_stay_home_7
**weak identification test !
esttab 
esttab IV_stay_home.tex, replace star(+ 0.10 * 0.05 ** 0.01 *** 0.001)
est clear 

**Robustness Check: death per inhabitants without penny stocks as well
**for comparison 
reg prcodavg_log weekly_death  if log_dummy==0 , robust 
reg prcodavg_log death_fraction if log_dummy==0, robust
eststo death_fraction
 
reg prcodavg_log weekly_death sic if log_dummy==0, robust 
reg prcodavg_log death_fraction sic if log_dummy==0, robust 
eststo death_fraction_1

reg prcodavg_log weekly_death sic sales_log if log_dummy==0 & sales_dummy==0, robust 
reg prcodavg_log death_fraction sic sales_log  if log_dummy==0 & sales_dummy==0 , robust 
eststo death_fraction_2

reg prcodavg_log weekly_death sic sales_before_log cash_log if log_dummy==0 & sales_dummy==0 , robust 
reg prcodavg_log death_fraction sic sales_log cash_log if log_dummy==0 & sales_dummy==0, robust
eststo death_fraction_3 

reg prcodavg_log weekly_death sic sales_log cash_log debt_to_assets if log_dummy==0 & sales_dummy==0 , robust 
reg prcodavg_log death_fraction sic sales_log cash_log debt_to_assets if log_dummy==0 & sales_dummy==0, robust 
eststo death_fraction_4

esttab 
esttab using death_fraction.tex, replace star(+ 0.10 * 0.05 ** 0.01 *** 0.001)
est clear 

**robustness check outlier
**one for company size 
**another for marketvalue 
tabstat mkvaltq, stats(p90) 
tabstat atq, stats(p90)

**test when largest 10% of companies are excluded
reg prcodavg_log weekly_death if atq<16428.9, robust 
eststo rub
reg prcodavg_log weekly_death, robust 
reg prcodavg_log weekly_death sic  if atq<16428.9, robust
eststo rub_1
reg prcodavg_log weekly_death sic, robust
reg prcodavg_log weekly_death sic sales_log if atq<16428.9, robust
eststo rub_2
reg prcodavg_log weekly_death sic sales_log, robust
reg prcodavg_log weekly_death sic sales_log cash_log if atq<16428.9, robust
eststo rub_3
reg prcodavg_log weekly_death sic sales_log cash_log,robust
reg prcodavg_log weekly_death sic sales_log cash_log debt_to_assets if atq<16428.9, robust
eststo rub_4
reg prcodavg_log weekly_death sic sales_log cash_log debt_to_assets, robust 
esttab 
esttab using rub_1.tex, replace star(+ 0.10 * 0.05 ** 0.01 *** 0.001)
est clear 

**test when companies with the 10% highest marketvalue are excluded 
reg prcodavg_log weekly_death if mkvaltq<19100.34, robust 
eststo rub_2
reg prcodavg_log weekly_death, robust 
reg prcodavg_log weekly_death sic  if mkvaltq<19100.34, robust
eststo rub_2_2
reg prcodavg_log weekly_death sic, robust
reg prcodavg_log weekly_death sic sales_log if mkvaltq<19100.34, robust
eststo rub_2_3
reg prcodavg_log weekly_death sic sales_log, robust
reg prcodavg_log weekly_death sic sales_log cash_log if mkvaltq<19100.34, robust
eststo rub_2_4
reg prcodavg_log weekly_death sic sales_log cash_log,robust
reg prcodavg_log weekly_death sic sales_log cash_log debt_to_assets if mkvaltq<19100.34, robust
eststo rub_2_5
reg prcodavg_log weekly_death sic sales_log cash_log debt_to_assets, robust 
esttab 
esttab using rub_2.tex, replace star(+ 0.10 * 0.05 ** 0.01 *** 0.001)
est clear 





*//IV
clear all
cd "Z:\SP PHD U3\Regressions\Regression_handin"
use Newest_data.dta, clear
*//IV
*new data for IV
rename _merge _merge3
merge m:1 state using HouseholdfeatureData.dta
gen popden = popu/landarea_km
label var popden "population density per sqr-km"
*with population (not significant)

ivregress 2sls prcodavg (stay_home_order=pop), first
*********
reg prcodavg weekly_death
reg prcodavg weekly_death,r
ivregress 2sls prcodavg (weekly_death=pop),r
test weekly_death
**testing endogenous here will be testing robustness
estat endogenous
****
ivregress 2sls prcodavg (weekly_death=pop), first
estat endogenous
*
ivregress 2sls prcodavg (weekly_death= TotalPopulation65yearsandover),first
estat endogenous
test weekly_death


*
*testing politics
*insignificant
ivregress 2sls prcodavg (stay_home_order=polit), first
*********
reg prcodavg weekly_death
reg prcodavg weekly_death,r
ivregress 2sls prcodavg (weekly_death=polit),r
test weekly_death
**testing endogenous here will be testing robustness
estat endogenous
****
ivregress 2sls prcodavg (weekly_death=polit), first
estat endogenous


*testing politics_2
ivregress 2sls prcodavg (stay_home_order=polit_last), first
ivregress 2sls prcodavg (weekly_death=polit_last), first


ivregress 2sls prcodavg (weekly_death=popu),first
ivregress 2sls prcodavg (weekly_death=popden),first
ivregress 2sls prcodavg (weekly_death=polit),first
ivregress 2sls prcodavg (weekly_death=polit_last),first
ivregress 2sls prcodavg (weekly_death= householdsizeavg ),first
ivregress 2sls prcodavg (weekly_death= medianage ),first
ivregress 2sls prcodavg (weekly_death= housenovehicle_calc ),first
ivregress 2sls prcodavg (weekly_death= nocarnorent ),first
ivregress 2sls prcodavg (weekly_death= TotalHouseholdswithoneormorepeop ),first
ivregress 2sls prcodavg (weekly_death= unisured_percent_2019 ),first


